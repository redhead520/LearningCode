#!/usr/bin/env python
# -*- coding: utf-8 -*-

' 数据结构 '

# 树
# 二叉树
# 红黑树
# B树

# 二叉树
## 特点：
# 1、每个结点最多有两颗子树，结点的度最大为2。
# 2、左子树和右子树是有顺序的，次序不能颠倒。
# 3、即使某结点只有一个子树，也要区分左右子树。

# 特殊的二叉树及特点
# 1、斜树: 所有的结点都只有左子树（左斜树），或者只有右子树（右斜树）。这就是斜树，应用较少
# 2、满二叉树: 所有的分支结点都存在左子树和右子树，并且所有的叶子结点都在同一层上，这样就是满二叉树。就是完美圆满的意思，关键在于树的平衡。
#     根据满二叉树的定义，得到其特点为：
#             叶子只能出现在最下一层。
#             非叶子结点度一定是2.
#             在同样深度的二叉树中，满二叉树的结点个数最多，叶子树最多。
# 3、完全二叉树
#     特点：
#     叶子结点只能出现在最下一层（满二叉树继承而来）
#     最下层叶子结点一定集中在左 部连续位置。
#     倒数第二层，如有叶子节点，一定出现在右部连续位置。
#     同样结点树的二叉树，完全二叉树的深度最小（满二叉树也是对的）。
# 4、扩充二叉树

# 二叉树性质
# 1、一般二叉树性质
#     1、在非空二叉树的i层上，至多有2^(i-1)个节点(i>=1)。通过归纳法论证。
#     2、在深度为K的二叉树上最多有(2^k)-1个结点（k>=1)。通过归纳法论证。
#     3、对于任何一棵非空的二叉树,如果叶节点个数为n0，度数为2的节点个数为n2，则有: n0 = n2 + 1
#### 一个节点的子节点的个数称为该节点的度数
#### 根 ， 分支节点， 叶节点

if __name__ == '__main__':
    pass
