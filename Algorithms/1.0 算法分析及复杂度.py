#!/usr/bin/env python2
# -*- coding: utf-8 -*-
### 算法设计模式
- 枚举法
- 贪心法
- 分治法
- 回溯法
- 动态规划法
- 分支限界法

## 算法的代价
- 存储开销（空间开销）
- 时间开销

#### 算法分析就是针对一个具体算法，设法确定一种函数关系，问题实例的某种规模n为参数，反映出这个算法在处理规模n的问题实例时需要付出的时间（或空间）代价.

## 大O记法、渐进算法
对于充分大的n, 总有 0 < f(n) <= c * g(n) ==> 函数g是函数f的一个渐进函数（忽略）常量因子
标记为： f(n) = O(g(n))

## 时间复杂度： T(n) = O(g(n))
O(g(n)):
- O(1)       # 常量复杂度
- O(log n)    # 对数复杂度
- O(n)        # 线性复杂度
- O(n*log n)
- O(n**2)      # 平方复杂度
- O(n**3)
- O(2**n)      # 指数复杂度

空间复杂度： S(n) = O(g(n))

